# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]

jobs:
  build-windows:

    runs-on: windows-latest
    
    env:
      DOTNET_INSTALL_DIR: '.\.dotnet'
    
    steps:
    - uses: actions/checkout@v3
    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
        path: ${{ env.DOTNET_INSTALL_DIR }}
        key: ${{ runner.os }}-dotnet-8
        restore-keys: ${{ runner.os }}-dotnet-8
    - name: Install dotnet
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.100-preview.6.23330.14'
    - name: Install MAUI Workloads
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      run: |
        dotnet workload install maui-windows --ignore-failed-sources
    - name: Decrypt PFX File
      run: |
        echo "${{ secrets.WINDOWS_PFX_FILE }}" > cert.pfx.asc
        certutil -decode cert.pfx.asc cert.pfx
    - name: Add Cert to Store
      run: certutil -user -q -p ${{ secrets.WINDOWS_PFX_PASSWORD }} -importpfx cert.pfx NoRoot
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-prerelease: true
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet msbuild WffnEmsMaui\WffnEmsMaui.csproj -r -c Debug -p:RestorePackages=false -p:TargetFramework=net8-windows10.0.22621.0 /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="${{ secrets.WINDOWS_PFX_THUMBPRINT }}"
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        path: .\**\AppPackages\**\*.*
    - name: Test & start WinAppDriver
      run: |
        Start-Process -FilePath "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe"
        dotnet test --verbosity normal
